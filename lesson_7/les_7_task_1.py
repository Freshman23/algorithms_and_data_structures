""" 1. Отсортируйте по убыванию методом пузырька одномерный целочисленный массив,
заданный случайными числами на промежутке [-100; 100). Выведите на экран исходный и отсортированный массивы.
Примечания:
a. алгоритм сортировки должен быть в виде функции, которая принимает на вход массив данных,
b. постарайтесь сделать алгоритм умнее, но помните, что у вас должна остаться сортировка пузырьком.
Улучшенные версии сортировки, например, расчёской, шейкерная и другие в зачёт не идут.
"""

import random

array = [random.randint(-100, 99) for _ in range(10)]
print(f'{array} - исходный массив')


def bubble_sort_desc(arr: list):
    j = len(arr) - 1

    while j >= 0:
        k = -1   # Метка последней смены элементов на предыдущей итерации

        for i in range(j):

            if arr[i] < arr[i + 1]:
                arr[i], arr[i + 1] = arr[i + 1], arr[i]
                k = i   # При смене элементов помечаем индекс, на котором произошла смена

        j = k   # На следующей итерации будет произведен обход только до элемента с индексом последней смены.
        # Если смены не было, то j = k = -1 и массив считается упорядоченным.
        print(f'{arr}, j = {j}')   # для проверки текущего массива и индекса последней смены


bubble_sort_desc(array)
print(f'{array} - упорядоченный по убыванию массив')
